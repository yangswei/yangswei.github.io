<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>杨世威</title>
    <description>欢迎来到我的个人站~</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 09 Oct 2018 15:02:53 +0800</pubDate>
    <lastBuildDate>Tue, 09 Oct 2018 15:02:53 +0800</lastBuildDate>
    <generator>Jekyll v3.5.2</generator>
    
      <item>
        <title>Nginx+https</title>
        <description>&lt;p&gt;##生成免费证书&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;GIthub地址：[acme]: https://github.com/Neilpang/acme.sh /(免费证书github地址)
生成方法：  &lt;br /&gt;
    curl https://get.acme.sh | SH &lt;br /&gt;
    执行完后，脚本位置在~/.acme.sh/下  &lt;br /&gt;
    acme.sh –issue –nginx -d example.com -d www.example.com -d cp.example.com   &lt;br /&gt;
    执行完之后，屏幕上会显示生成证书的位置&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;配置nginx&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;默认是https访问，当访问80端口时，指向https
```
server {
  listen  443 ssl;
  ssl_certificate      ./ssl/youdomain.cer;
  ssl_certificate_key  ./ssl/youdomain.key;
  ssl_session_timeout  5m;
  ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers         HIGH:!aNULL:!MD5;
  server_name  www.youdomainyoudomain;
  location / {
      root   /opt/html;
      index  index.html index.htm index.php;
  }
}&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;server {
    listen 80;
    server_name  www.youdomainyoudomain;
    rewrite ^(.*)$ https://${server_name}$1 permanent;
}
```&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Oct 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/10/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E5%85%89%E9%80%9FHttps%E8%AF%81%E4%B9%A6%E8%AE%A4%E8%AF%81/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/10/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E5%85%89%E9%80%9FHttps%E8%AF%81%E4%B9%A6%E8%AE%A4%E8%AF%81/</guid>
        
        <category>https</category>
        
        
      </item>
    
      <item>
        <title>学习搭建个人博客</title>
        <description>&lt;h2 id=&quot;正文&quot;&gt;正文：&lt;/h2&gt;
&lt;p&gt;　这边教程是针对与Mac的，一方面是给自己做笔记，可以提升自己的写作、总结能力。&lt;/p&gt;

&lt;h2 id=&quot;配置环境&quot;&gt;配置环境&lt;/h2&gt;

&lt;h3 id=&quot;安装node必须&quot;&gt;安装Node（必须）&lt;/h3&gt;

&lt;p&gt;作用：用来生成静态页面的
到Node.js&lt;a href=&quot;https://nodejs.org/&quot;&gt;官网&lt;/a&gt;下载相应平台的最新版本，一路安装即可。&lt;/p&gt;

&lt;h3 id=&quot;安装git必须&quot;&gt;安装Git（必须）&lt;/h3&gt;
&lt;p&gt;安装Xcode就自带有Git，我就不多说了。&lt;/p&gt;

&lt;h3 id=&quot;申请github必须&quot;&gt;申请GitHub（必须）&lt;/h3&gt;
&lt;p&gt;作用：是用来做博客的远程创库、域名、服务器之类的，怎么与本地hexo建立连接等下讲。
&lt;a href=&quot;https://github.com/&quot;&gt;github&lt;/a&gt;账号我也不再啰嗦了,没有的话直接申请就行了，跟一般的注册账号差不多，SSH Keys，看你自己了，可以不配制，不配置的话以后每次对自己的博客有改动提交的时候就要手动输入账号密码，配置了就不需要了，怎么配置我就不多说了，网上有很多教程。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;问：本地部署成功了，也能预览效果，但使用 username.github.io 访问，&lt;code class=&quot;highlighter-rouge&quot;&gt;出现 404 &lt;/code&gt; .    &lt;br /&gt;
答：首先确认 hexo d 命令执行是否报错，如果没有报错，再查看一下你的 github 的 username.github.io 仓库，你的博客是否已经成功提交了，你的 github 邮箱也要通过验证才行。&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Sat, 06 Oct 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/10/Blog%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/10/Blog%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/</guid>
        
        <category>博客</category>
        
        
      </item>
    
  </channel>
</rss>
